/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;

import Business.BitcoinD.Bitcoin;
import Business.BitcoinD.BitcoinDir;
import Business.BitcoinD.Wallet;
import Business.BitcoinD.WalletRecord;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sid
 */
public class MyWalletJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MyWalletJPanel
     */
    private JPanel processContainer;
    private BitcoinDir bitcoinDir;
    private WalletRecord walletR;
    public MyWalletJPanel(JPanel processContainer, BitcoinDir bitcoinDir, WalletRecord walletRec) {
        this.bitcoinDir = bitcoinDir;
        this.processContainer= processContainer;
        this.walletR=walletRec;
        initComponents();
        
         DefaultTableModel dtm= (DefaultTableModel) coinTable.getModel();
        dtm.setRowCount(0);
        int tot=0;
        
        for(Wallet w : walletR.getWalletList()){
            
          
            Object[] row= new Object[5];
            
            row[0]=w;
            row[1]=w.getPrevHash();
            row[2]=w.getCurrentHash();
            row[3]=w.getSignature();
           row[4]=w.getQuantity();
            tot= w.getQuantity() + tot;
            
           
            dtm.addRow(row);
            
            
        }
        
        String str = String.valueOf(tot);
        as.setText(str);
    }

    private void refreshTable()
    {
        DefaultTableModel dtm= (DefaultTableModel) coinTable.getModel();
        dtm.setRowCount(0);
        int tot=0;
        
        for(Wallet w : walletR.getWalletList()){
            
          
            Object[] row= new Object[5];
            
            row[0]=w;
            row[1]=w.getPrevHash();
            row[2]=w.getCurrentHash();
            row[3]=w.getSignature();
           row[4]=w.getQuantity();
            tot= w.getQuantity() + tot;
            
           
            dtm.addRow(row);
            
            
        }
        
         Bitcoin bitcoin = bitcoinDir.searchBitcoin("Bitcoin");
       bitcoin.getCoinName();
       bitcoin.setCurrentHash("1FfmbHfnpaZjKFvyi1okTjJJusN455paPH");
       bitcoin.setPrevHash("375mbivyngdLjNhy89C7josCPJcsvRFuWT");
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        coinTable = new javax.swing.JTable();
        as = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        sellBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        coinTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        coinTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Prev", "Current", "Signature", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(coinTable);
        if (coinTable.getColumnModel().getColumnCount() > 0) {
            coinTable.getColumnModel().getColumn(0).setResizable(false);
            coinTable.getColumnModel().getColumn(1).setResizable(false);
            coinTable.getColumnModel().getColumn(3).setResizable(false);
            coinTable.getColumnModel().getColumn(4).setResizable(false);
        }

        as.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        as.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel1.setText("Total Bitcoins:");

        sellBtn.setText("Sell");
        sellBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellBtnActionPerformed(evt);
            }
        });

        backBtn.setText("< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ZIcons/full - Copy.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(296, 296, 296))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(backBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3))
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sellBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(as, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(279, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(as, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sellBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backBtn)
                        .addGap(111, 111, 111))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sellBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellBtnActionPerformed
      
        
        int row = coinTable.getSelectedRow();
        
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Wallet a = (Wallet)coinTable.getValueAt(row, 0);
        walletR.removeWallet(a);
        
        refreshTable();
        
        
    }//GEN-LAST:event_sellBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        processContainer.remove(this);
        CardLayout layout = (CardLayout) processContainer.getLayout();
        layout.previous(processContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void asActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_asActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField as;
    private javax.swing.JButton backBtn;
    private javax.swing.JTable coinTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton sellBtn;
    // End of variables declaration//GEN-END:variables
}

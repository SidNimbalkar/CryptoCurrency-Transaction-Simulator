/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;
import Business.CoinQuote.MyHTTPRequest;

import Business.BitcoinD.Bitcoin;
import Business.BitcoinD.BitcoinDir;
import Business.BitcoinD.Wallet;
import Business.BitcoinD.WalletRecord;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import java.awt.CardLayout;
import java.util.Random;
import javax.swing.JPanel;

import java.util.logging.Level;
import java.util.logging.Logger;
import Business.CoinQuote.CoinBase.Reply;
import Business.CoinQuote.Coin;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import javax.swing.JOptionPane;
import Business.Blockchain.Transaction;
import java.security.PrivateKey;
/**
 *
 * @author Sid
 */
public class BuyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BuyJPanel
     */
    private JPanel processContainer;
    private BitcoinDir bitcoinDir;
    private WalletRecord walletR;
    private Enterprise enterprise;
    public BuyJPanel(JPanel processContainer, BitcoinDir bitcoinDir, WalletRecord walletRec)  {
        initComponents();
        this.bitcoinDir = bitcoinDir;
        this.processContainer= processContainer;
        this.walletR=walletRec;
      populateComboBox();
        try {
            transaction();
        } catch (Exception ex) {
            Logger.getLogger(BuyJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    public void process()
    {
        int bit;
        
        Transaction trans = new Transaction();
        PrivateKey priateKey = null;
        trans.generateSignature(priateKey);
    }
    
     public void populateComboBox() {
    
        
    spinner1.addItem("exchange");
    spinner1.addItem("broker1");
           
    }
    
   
    public void transaction() throws Exception
    {
          
         String url = "https://api.coinbase.com/v2/prices/spot";
        MyHTTPRequest http = new MyHTTPRequest();
        String response = http.doRequest(url);
            Gson gson = new GsonBuilder().setPrettyPrinting().create();
        Reply reply = gson.fromJson(response, Reply.class);
            lab.setText(reply.getData().getAmount());
    }

   

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        buyBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        spinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lab = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        yearlyBtn = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        spinner1 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();

        jToggleButton1.setText("jToggleButton1");

        setBackground(new java.awt.Color(255, 255, 255));

        buyBtn.setText("Buy");
        buyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyBtnActionPerformed(evt);
            }
        });

        backBtn.setText("< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel1.setText("Current BTC Price:");

        lab.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        lab.setText("Current_Price");

        yearlyBtn.setText("Hourly");
        yearlyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearlyBtnActionPerformed(evt);
            }
        });

        btn2.setText("Monthly");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel4.setText("Check Price Trends");

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel5.setText("Make a Purchase!");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ZIcons/full - Copy.png"))); // NOI18N

        jButton1.setText("Sell");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        spinner1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spinner1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel6.setText("Choose Exchange");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5))
                                        .addGap(5, 5, 5))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(yearlyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(buyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(backBtn)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 274, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(lab, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(377, 377, 377))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(lab))
                                .addGap(41, 41, 41)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(yearlyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(spinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 25, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(158, 158, 158)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addComponent(backBtn))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
       WalletHomePanel panel= new WalletHomePanel(processContainer);
       processContainer.add("AccountPanel",panel);
       CardLayout layout = (CardLayout) processContainer.getLayout();
       layout.next(processContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void buyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyBtnActionPerformed
        
        int quant = (Integer) spinner.getValue();
        if(quant <1){
            JOptionPane.showMessageDialog(null, "Please select atleast 1 Coin!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }else
        {
        Bitcoin bitcoin = bitcoinDir.searchBitcoin("Bitcoin");
       bitcoin.getCoinName();
       bitcoin.setCurrentHash("375mbivyngdLjNhy89C7josCPJcsvRFuWT");
       bitcoin.setPrevHash("1FfmbHfnpaZjKFvyi1okTjJJusN455paPH");
        
        Wallet wallet = walletR.addWallet();
        wallet.setCoinName("Bitcoin");
        wallet.setPrevHash("1FfmbHfnpaZjKFvyi1okTjJJusN455paPH");
        wallet.setCurrentHash("375mbivyngdLjNhy89C7josCPJcsvRFuWT");
        wallet.setSignature(getSaltString());
        wallet.setQuantity(quant);
        
            MyWalletJPanel panel= new MyWalletJPanel(processContainer, bitcoinDir, walletR);
       processContainer.add("AccountPanel",panel);
       CardLayout layout = (CardLayout) processContainer.getLayout();
       layout.next(processContainer);
        }
    }//GEN-LAST:event_buyBtnActionPerformed
private String getSaltString() {
        String SALTCHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder salt = new StringBuilder();
        Random rnd = new Random();
        while (salt.length() < 18) { // length of the random string.
            int index = (int) (rnd.nextFloat() * SALTCHARS.length());
            salt.append(SALTCHARS.charAt(index));
        }
        String saltStr = salt.toString();
        return saltStr;

    }
    private void yearlyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearlyBtnActionPerformed
        BitcoinYChartJPanel panel= new BitcoinYChartJPanel(processContainer, bitcoinDir);
        processContainer.add("AccountPanel",panel);
        CardLayout layout = (CardLayout) processContainer.getLayout();
        layout.next(processContainer);
    }//GEN-LAST:event_yearlyBtnActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed

        BitcoinMChartJPanel panel= new BitcoinMChartJPanel(processContainer, bitcoinDir);
        processContainer.add("AccountPanel",panel);
        CardLayout layout = (CardLayout) processContainer.getLayout();
        layout.next(processContainer);

    }//GEN-LAST:event_btn2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MyWalletJPanel panel= new MyWalletJPanel(processContainer, bitcoinDir,walletR);
                processContainer.add("AccountPanel",panel);
                CardLayout layout = (CardLayout) processContainer.getLayout();
                layout.next(processContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void spinner1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spinner1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_spinner1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton btn2;
    private javax.swing.JButton buyBtn;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel lab;
    private javax.swing.JSpinner spinner;
    private javax.swing.JComboBox spinner1;
    private javax.swing.JButton yearlyBtn;
    // End of variables declaration//GEN-END:variables
}
